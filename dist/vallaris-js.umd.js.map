{"version":3,"file":"vallaris-js.umd.js","sources":["../node_modules/dot-prop-immutable/lib/index.js","../src/visual/layer.ts","../src/visual/group.ts","../src/config/initial.ts"],"sourcesContent":["/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n","import { get } from 'dot-prop-immutable'\nimport { SelectLayer } from '../types';\nimport { SelectLayerId } from '../types/layer';\n\nconst select = ({ styles, ids }: SelectLayerId) => {\n    const { layers } = styles;\n\n    let newRender: any[] = [];\n\n    layers.map((l: any) => {\n        if (ids.includes(l.id)) {\n            newRender.push(l);\n        }\n    });\n\n    return newRender;\n}\n\nconst selectWithMetadata = ({ styles, metadataKey }: SelectLayer) => {\n    const { layers } = styles;\n\n    let newRender: any[] = [];\n\n    layers.map((l: any) => {\n        const newMetadata = get(l, \"metadata\")\n            ? Object.keys(get(l, \"metadata\")).filter((mt) => mt === metadataKey)\n            : [];\n\n        if (newMetadata.length) {\n            newRender.push(l);\n        }\n    });\n\n    return newRender;\n}\n\n\nconst layers = {\n    select,\n    selectWithMetadata\n}\n\nexport { layers }","import { set } from 'dot-prop-immutable';\nimport { RenderGroup, VisibleGroup, ReturnGroup } from '../types';\n\n\nconst visibility = ({ map, groupId, type, options }: VisibleGroup) => {\n    const key = options?.groupKey ? options.groupKey : \"vallaris:group\";\n    const styles = map.getStyle()\n    const { layers } = styles\n    let newLayers: any[] = [];\n\n    for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i]\n        if (layer.metadata && layer.metadata[key] && layer.metadata[key] === groupId) {\n            let input = { ...layer };\n            const newInput = set(input, \"layout.visibility\", type);\n\n            newLayers.push(newInput);\n\n            map.setLayoutProperty(layer.id, 'visibility', type)\n        } else {\n            newLayers.push(layer);\n\n            if (options?.onlyGroup && type === 'visible') map.setLayoutProperty(layer.id, 'visibility', 'none')\n        }\n    }\n\n    if (options?.returnStyle) {\n        let newStyle = { ...styles };\n        newStyle.layers = newLayers;\n\n        return newStyle;\n    }\n\n}\n\n\nconst get = ({ styles, groupIds, options }: RenderGroup) => {\n    const key = options?.groupKey ? options.groupKey : \"vallaris:group\";\n    let groups: ReturnGroup[] = [];\n    const { layers } = styles;\n\n    const filterLayers = layers.filter(\n        (l: any) =>\n            l.metadata && l.metadata[key] && groupIds.includes(l.metadata[key])\n    );\n\n    filterLayers.map((l: any) => {\n        if (groups.filter((g) => g.groupId === l.metadata[key]).length) {\n            const index = groups.map((g) => g.groupId).indexOf(l.metadata[key]);\n            groups[index].layers.push(l);\n        } else {\n            let input = { groupId: l.metadata[key], layers: [l] };\n            groups.push(input);\n        }\n    });\n\n    return groups;\n};\n\n\nconst group = {\n    get,\n    visibility\n}\n\nexport { group }","const defaultHOST = \"https://cloud.vallarismaps.com\";\n\ninterface InitialProps {\n    apiKey: string;\n    host?: string;\n}\n\nvar config: InitialProps;\n\nconst initial = ({ host, apiKey }: InitialProps) => {\n    config.host = host ? host : defaultHOST;\n\n    if (config.apiKey) {\n        config.apiKey = apiKey;\n    } else {\n        throw new Error(\"API Key is require please check in management > API Key\");\n    }\n\n};\n\nexport { initial, config };\n"],"names":["get","layers","set"],"mappings":"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"}