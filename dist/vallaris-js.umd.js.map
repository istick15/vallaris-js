{"version":3,"file":"vallaris-js.umd.js","sources":["../node_modules/dot-prop-immutable/lib/index.js","../src/visual/layer.ts","../src/visual/group.ts","../src/config/fetch.ts","../src/features/get.ts","../src/features/create.ts","../src/features/update.ts","../src/features/delete.ts","../src/features/index.ts","../src/styles/get.ts","../src/styles/index.ts","../src/config/initial.ts"],"sourcesContent":["/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n","import { get } from 'dot-prop-immutable'\nimport { SelectLayer } from '../types';\nimport { SelectLayerId } from '../types/layer';\n\nconst select = ({ styles, ids }: SelectLayerId) => {\n    const { layers } = styles;\n\n    let newRender: any[] = [];\n\n    layers.map((l: any) => {\n        if (ids.includes(l.id)) {\n            newRender.push(l);\n        }\n    });\n\n    return newRender;\n}\n\nconst selectWithMetadata = ({ styles, metadataKey }: SelectLayer) => {\n    const { layers } = styles;\n\n    let newRender: any[] = [];\n\n    layers.map((l: any) => {\n        const newMetadata = get(l, \"metadata\")\n            ? Object.keys(get(l, \"metadata\")).filter((mt) => mt === metadataKey)\n            : [];\n\n        if (newMetadata.length) {\n            newRender.push(l);\n        }\n    });\n\n    return newRender;\n}\n\n\nconst layers = {\n    select,\n    selectWithMetadata\n}\n\nexport { layers }","import { set } from 'dot-prop-immutable';\nimport { RenderGroup, VisibleGroup, ReturnGroup } from '../types';\n\n\nconst visibility = ({ map, groupId, type, options }: VisibleGroup) => {\n    const key = options?.groupKey ? options.groupKey : \"vallaris:group\";\n    const styles = map.getStyle()\n    const { layers } = styles\n    let newLayers: any[] = [];\n\n    for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i]\n        if (layer.metadata && layer.metadata[key] && layer.metadata[key] === groupId) {\n            let input = { ...layer };\n            const newInput = set(input, \"layout.visibility\", type);\n\n            newLayers.push(newInput);\n\n            map.setLayoutProperty(layer.id, 'visibility', type)\n        } else {\n            newLayers.push(layer);\n\n            if (options?.onlyGroup && type === 'visible') map.setLayoutProperty(layer.id, 'visibility', 'none')\n        }\n    }\n\n    if (options?.returnStyle) {\n        let newStyle = { ...styles };\n        newStyle.layers = newLayers;\n\n        return newStyle;\n    }\n\n}\n\n\nconst get = ({ styles, groupIds, options }: RenderGroup) => {\n    const key = options?.groupKey ? options.groupKey : \"vallaris:group\";\n    let groups: ReturnGroup[] = [];\n    const { layers } = styles;\n\n    const filterLayers = layers.filter(\n        (l: any) =>\n            l.metadata && l.metadata[key] && groupIds.includes(l.metadata[key])\n    );\n\n    filterLayers.map((l: any) => {\n        if (groups.filter((g) => g.groupId === l.metadata[key]).length) {\n            const index = groups.map((g) => g.groupId).indexOf(l.metadata[key]);\n            groups[index].layers.push(l);\n        } else {\n            let input = { groupId: l.metadata[key], layers: [l] };\n            groups.push(input);\n        }\n    });\n\n    return groups;\n};\n\n\nconst group = {\n    get,\n    visibility\n}\n\nexport { group }","import { config } from \"./initial\";\n\nconst core = '/core/api';\nconst version = '1.0'\n\n\nconst getFetch = async (url: string, options: RequestInit) => {\n    return await fetch(url, {\n        ...options,\n        \"headers\": {\n            \"API-Key\": config.apiKey,\n            \"Content-Type\": \"application/json\",\n        }\n    })\n        .then(async (rs) => {\n            return {\n                status: rs.status,\n                response: options.method === 'DELETE' ? null : await rs.json()\n            }\n        })\n        .then(rs => rs)\n        .catch((err) => {\n            return {\n                status: 500,\n                response: err\n            }\n        });\n}\n\nconst covertParamToString = (params: Object) => {\n    return params\n        ? Object.keys(params)\n            .map(\n                (op, index) =>\n                    `${index === 0 ? \"?\" : \"&\"}${op}=${params[op]}`\n            )\n            .join(\"\")\n        : \"\"\n}\n\nconst parseURL = (type: \"collections\" | \"items\" | \"profile\" | \"styles\", method: RequestInit['method'], params?: any, ids?: {\n    collectionId?: string\n    featureId?: string\n    metadata?: boolean\n}) => {\n    const url = config.host\n    switch (type) {\n        case 'collections':\n            switch (method) {\n                case 'POST':\n                    return `${url}${core}/features/${version}/collections`\n                default:\n                    if (ids.collectionId) return `${url}${core}/features/${version}/collections/${ids.collectionId}`\n                    return `${url}${core}/features/${version}/collections${covertParamToString(params)}`\n            }\n        case 'items':\n            switch (method) {\n                case 'POST':\n                    return `${url}${core}/features/${version}/collections/${ids.collectionId}/items`\n                default:\n                    if (ids.featureId) return `${url}${core}/features/${version}/collections/${ids.collectionId}/items/${ids.featureId}`\n                    return `${url}${core}/features/${version}/collections/${ids.collectionId}/items${covertParamToString(params)}`\n            }\n        case 'profile':\n            return `${url}/${core}/managements/${version}}/account/profile`\n        case 'styles':\n            switch (method) {\n                case 'POST':\n                    return `${url}${core}/styles/${version}-beta/styles`\n                default:\n                    if (ids.collectionId) return `${url}${core}/styles/${version}-beta/styles/${ids.collectionId}`\n                    if (ids.metadata && ids.collectionId) return `${url}${core}/styles/${version}-beta/styles/${ids.collectionId}/metadata`\n                    return `${url}${core}/styles/${version}-beta/styles/${ids.collectionId}${covertParamToString(params)}`\n            }\n        default:\n            return `${url}`\n    }\n}\n\nexport { getFetch, parseURL }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { GetCollection, GetFeature } from \"../types/collection\";\n\nconst collections = ({ collectionId, params }: GetCollection) => {\n    const collection = getFetch(parseURL('collections', 'GET', params, { collectionId }), { method: 'GET' });\n    return collection\n}\n\nconst data = ({ collectionId, featureId, params }: GetFeature) => {\n    const data = getFetch(parseURL('items', 'GET', params, { collectionId, featureId }), { method: 'GET' });\n    return data\n}\n\nconst get = {\n    collections,\n    data\n}\n\nexport { get }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { PostCollection, PostFeature } from \"../types/collection\";\n\nconst collections = ({ body }: PostCollection) => {\n    const collection = getFetch(parseURL('collections', 'POST'), { method: 'POST', body: JSON.stringify(body) });\n    return collection\n}\n\nconst data = ({ collectionId, body }: PostFeature) => {\n    const data = getFetch(parseURL('items', 'POST', { collectionId }), { method: 'POST', body: JSON.stringify(body) });\n    return data\n}\n\nconst create = {\n    collections,\n    data\n}\n\nexport { create }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { PutCollection, PutFeature } from \"../types/collection\";\n\nconst collections = ({ collectionId, body }: PutCollection) => {\n    const collection = getFetch(parseURL('collections', 'PUT', body, { collectionId }), { method: 'PUT', body: JSON.stringify(body) });\n    return collection\n}\n\nconst data = ({ collectionId, featureId, body }: PutFeature) => {\n    const data = getFetch(parseURL('items', 'PUT', body, { collectionId, featureId }), { method: 'PUT', body: JSON.stringify(body) });\n    return data\n}\n\nconst update = {\n    collections,\n    data\n}\n\nexport { update }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { GetCollection, GetFeature } from \"../types/collection\";\n\nconst collections = ({ collectionId, params }: GetCollection) => {\n    const collection = getFetch(parseURL('collections', 'DELETE', params, { collectionId }), { method: 'DELETE' });\n    return collection\n}\n\nconst data = ({ collectionId, featureId, params }: GetFeature) => {\n    const data = getFetch(parseURL('items', 'DELETE', params, { collectionId, featureId }), { method: 'DELETE' });\n    return data\n}\n\nconst remove = {\n    collections,\n    data\n}\n\nexport { remove }","\nimport { get } from './get'\nimport { create } from './create';\nimport { update } from './update';\nimport { remove } from './delete'\n\nconst features = {\n    create,\n    get,\n    update,\n    remove\n}\n\nexport { features } ","import { getFetch, parseURL } from \"../config/fetch\";\nimport { GetStyle } from \"../types/style\";\n\n\nconst get = ({ styleId, params, metadata }: GetStyle) => {\n    const data = getFetch(parseURL('styles', 'GET', params, { collectionId: styleId, metadata }), { method: 'GET' });\n    return data\n}\n\nexport { get }","import { get } from './get';\n\nconst styles = {\n    get\n}\n\nexport { styles }","\nimport { features } from '../features'\nimport { styles } from '../styles';\nimport { getFetch, parseURL } from './fetch';\n\nconst defaultHOST = \"https://cloud.vallarismaps.com\";\n\ninterface InitialProps {\n    apiKey: string;\n    host?: string;\n}\n\nvar config: InitialProps = {\n    apiKey: \"\",\n    host: \"\",\n};\n\nclass Initial {\n    features = features\n    styles = styles\n    constructor(source: InitialProps) {\n        config.host = source.host ? source.host : defaultHOST;\n        if (source.apiKey) {\n\n            config.apiKey = source.apiKey;\n\n            const profile = getFetch(parseURL('profile', 'GET'), { method: 'GET' });\n\n            profile.then(rs => {\n                if (rs.response === 200) {\n                    this.features = features\n                    this.styles = styles\n                } else {\n                    this.features = null;\n                    this.styles = null\n                }\n            })\n        } else {\n            this.features = null\n        }\n    }\n}\n\nexport { config }\n\nexport default Initial\n"],"names":["get","layers","__spreadValues","set","collections","data"],"mappings":"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"}