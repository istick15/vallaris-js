{"version":3,"file":"vallaris-js.cjs","sources":["../node_modules/dot-prop-immutable/lib/index.js","../src/visual/layer.ts","../src/visual/group.ts","../src/config/fetch.ts","../src/features/get.ts","../src/features/create.ts","../src/features/update.ts","../src/features/delete.ts","../src/features/index.ts","../src/styles/get.ts","../src/styles/index.ts","../src/config/initial.ts"],"sourcesContent":["/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n","import { get } from 'dot-prop-immutable'\nimport { SelectLayer } from '../types';\nimport { SelectLayerId } from '../types/layer';\n\nconst select = ({ styles, ids }: SelectLayerId) => {\n    const { layers } = styles;\n\n    let newRender: any[] = [];\n\n    layers.map((l: any) => {\n        if (ids.includes(l.id)) {\n            newRender.push(l);\n        }\n    });\n\n    return newRender;\n}\n\nconst selectWithMetadata = ({ styles, metadataKey }: SelectLayer) => {\n    const { layers } = styles;\n\n    let newRender: any[] = [];\n\n    layers.map((l: any) => {\n        const newMetadata = get(l, \"metadata\")\n            ? Object.keys(get(l, \"metadata\")).filter((mt) => mt === metadataKey)\n            : [];\n\n        if (newMetadata.length) {\n            newRender.push(l);\n        }\n    });\n\n    return newRender;\n}\n\n\nconst layers = {\n    select,\n    selectWithMetadata\n}\n\nexport { layers }","import { set } from 'dot-prop-immutable';\nimport { RenderGroup, VisibleGroup, ReturnGroup } from '../types';\n\n\nconst visibility = ({ map, groupId, type, options }: VisibleGroup) => {\n    const key = options?.groupKey ? options.groupKey : \"vallaris:group\";\n    const styles = map.getStyle()\n    const { layers } = styles\n    let newLayers: any[] = [];\n\n    for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i]\n        if (layer.metadata && layer.metadata[key] && layer.metadata[key] === groupId) {\n            let input = { ...layer };\n            const newInput = set(input, \"layout.visibility\", type);\n\n            newLayers.push(newInput);\n\n            map.setLayoutProperty(layer.id, 'visibility', type)\n        } else {\n            newLayers.push(layer);\n\n            if (options?.onlyGroup && type === 'visible') map.setLayoutProperty(layer.id, 'visibility', 'none')\n        }\n    }\n\n    if (options?.returnStyle) {\n        let newStyle = { ...styles };\n        newStyle.layers = newLayers;\n\n        return newStyle;\n    }\n\n}\n\n\nconst get = ({ styles, groupIds, options }: RenderGroup) => {\n    const key = options?.groupKey ? options.groupKey : \"vallaris:group\";\n    let groups: ReturnGroup[] = [];\n    const { layers } = styles;\n\n    const filterLayers = layers.filter(\n        (l: any) =>\n            l.metadata && l.metadata[key] && groupIds.includes(l.metadata[key])\n    );\n\n    filterLayers.map((l: any) => {\n        if (groups.filter((g) => g.groupId === l.metadata[key]).length) {\n            const index = groups.map((g) => g.groupId).indexOf(l.metadata[key]);\n            groups[index].layers.push(l);\n        } else {\n            let input = { groupId: l.metadata[key], layers: [l] };\n            groups.push(input);\n        }\n    });\n\n    return groups;\n};\n\n\nconst group = {\n    get,\n    visibility\n}\n\nexport { group }","import { config } from \"./initial\";\n\nconst core = '/core/api';\nconst version = '1.0'\n\n\nconst getFetch = async (url: string, options: RequestInit) => {\n    return await fetch(url, {\n        ...options,\n        \"headers\": {\n            \"API-Key\": config.apiKey,\n            \"Content-Type\": \"application/json\",\n        }\n    })\n        .then(async (rs) => {\n            return {\n                status: rs.status,\n                response: options.method === 'DELETE' ? null : await rs.json()\n            }\n        })\n        .then(rs => rs)\n        .catch((err) => {\n            return {\n                status: 500,\n                response: err\n            }\n        });\n}\n\nconst covertParamToString = (params: Object) => {\n    return params\n        ? Object.keys(params)\n            .map(\n                (op, index) =>\n                    `${index === 0 ? \"?\" : \"&\"}${op}=${params[op]}`\n            )\n            .join(\"\")\n        : \"\"\n}\n\nconst parseURL = (type: \"collections\" | \"items\" | \"profile\" | \"styles\", method: RequestInit['method'], params?: any, ids?: {\n    collectionId?: string\n    featureId?: string\n    metadata?: boolean\n}) => {\n    const url = config.host\n    switch (type) {\n        case 'collections':\n            switch (method) {\n                case 'POST':\n                    return `${url}${core}/features/${version}/collections`\n                default:\n                    if (ids.collectionId) return `${url}${core}/features/${version}/collections/${ids.collectionId}`\n                    return `${url}${core}/features/${version}/collections${covertParamToString(params)}`\n            }\n        case 'items':\n            switch (method) {\n                case 'POST':\n                    return `${url}${core}/features/${version}/collections/${ids.collectionId}/items`\n                default:\n                    if (ids.featureId) return `${url}${core}/features/${version}/collections/${ids.collectionId}/items/${ids.featureId}`\n                    return `${url}${core}/features/${version}/collections/${ids.collectionId}/items${covertParamToString(params)}`\n            }\n        case 'profile':\n            return `${url}/${core}/managements/${version}}/account/profile`\n        case 'styles':\n            switch (method) {\n                case 'POST':\n                    return `${url}${core}/styles/${version}-beta/styles`\n                default:\n                    if (ids.collectionId) return `${url}${core}/styles/${version}-beta/styles/${ids.collectionId}`\n                    if (ids.metadata && ids.collectionId) return `${url}${core}/styles/${version}-beta/styles/${ids.collectionId}/metadata`\n                    return `${url}${core}/styles/${version}-beta/styles/${ids.collectionId}${covertParamToString(params)}`\n            }\n        default:\n            return `${url}`\n    }\n}\n\nexport { getFetch, parseURL }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { GetCollection, GetFeature } from \"../types/collection\";\n\nconst collections = ({ collectionId, params }: GetCollection) => {\n    const collection = getFetch(parseURL('collections', 'GET', params, { collectionId }), { method: 'GET' });\n    return collection\n}\n\nconst data = ({ collectionId, featureId, params }: GetFeature) => {\n    const data = getFetch(parseURL('items', 'GET', params, { collectionId, featureId }), { method: 'GET' });\n    return data\n}\n\nconst get = {\n    collections,\n    data\n}\n\nexport { get }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { PostCollection, PostFeature } from \"../types/collection\";\n\nconst collections = ({ body }: PostCollection) => {\n    const collection = getFetch(parseURL('collections', 'POST'), { method: 'POST', body: JSON.stringify(body) });\n    return collection\n}\n\nconst data = ({ collectionId, body }: PostFeature) => {\n    const data = getFetch(parseURL('items', 'POST', { collectionId }), { method: 'POST', body: JSON.stringify(body) });\n    return data\n}\n\nconst create = {\n    collections,\n    data\n}\n\nexport { create }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { PutCollection, PutFeature } from \"../types/collection\";\n\nconst collections = ({ collectionId, body }: PutCollection) => {\n    const collection = getFetch(parseURL('collections', 'PUT', body, { collectionId }), { method: 'PUT', body: JSON.stringify(body) });\n    return collection\n}\n\nconst data = ({ collectionId, featureId, body }: PutFeature) => {\n    const data = getFetch(parseURL('items', 'PUT', body, { collectionId, featureId }), { method: 'PUT', body: JSON.stringify(body) });\n    return data\n}\n\nconst update = {\n    collections,\n    data\n}\n\nexport { update }","import { getFetch, parseURL } from \"../config/fetch\"\nimport { GetCollection, GetFeature } from \"../types/collection\";\n\nconst collections = ({ collectionId, params }: GetCollection) => {\n    const collection = getFetch(parseURL('collections', 'DELETE', params, { collectionId }), { method: 'DELETE' });\n    return collection\n}\n\nconst data = ({ collectionId, featureId, params }: GetFeature) => {\n    const data = getFetch(parseURL('items', 'DELETE', params, { collectionId, featureId }), { method: 'DELETE' });\n    return data\n}\n\nconst remove = {\n    collections,\n    data\n}\n\nexport { remove }","\nimport { get } from './get'\nimport { create } from './create';\nimport { update } from './update';\nimport { remove } from './delete'\n\nconst features = {\n    create,\n    get,\n    update,\n    remove\n}\n\nexport { features } ","import { getFetch, parseURL } from \"../config/fetch\";\nimport { GetStyle } from \"../types/style\";\n\n\nconst get = ({ styleId, params, metadata }: GetStyle) => {\n    const data = getFetch(parseURL('styles', 'GET', params, { collectionId: styleId, metadata }), { method: 'GET' });\n    return data\n}\n\nexport { get }","import { get } from './get';\n\nconst styles = {\n    get\n}\n\nexport { styles }","\nimport { features } from '../features'\nimport { styles } from '../styles';\nimport { getFetch, parseURL } from './fetch';\n\nconst defaultHOST = \"https://cloud.vallarismaps.com\";\n\ninterface InitialProps {\n    apiKey: string;\n    host?: string;\n}\n\nvar config: InitialProps = {\n    apiKey: \"\",\n    host: \"\",\n};\n\nclass Initial {\n    features = features\n    styles = styles\n    constructor(source: InitialProps) {\n        config.host = source.host ? source.host : defaultHOST;\n        if (source.apiKey) {\n\n            config.apiKey = source.apiKey;\n\n            const profile = getFetch(parseURL('profile', 'GET'), { method: 'GET' });\n\n            profile.then(rs => {\n                if (rs.response === 200) {\n                    this.features = features\n                    this.styles = styles\n                } else {\n                    this.features = null;\n                    this.styles = null\n                }\n            })\n        } else {\n            this.features = null\n        }\n    }\n}\n\nexport { config }\n\nexport default Initial\n"],"names":["get","layers","__spreadValues","set","collections","data"],"mappings":"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"}